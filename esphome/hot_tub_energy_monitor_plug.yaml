# Maxcio W-UK007S

# Substitutions
substitutions:
  # Device Names
  device_name: "hot_tub_energy_monitor_plug"
  friendly_name: "Hot Tub"
  # Icon
  main_icon: "hot-tub"
  # Default Relay State
  # Aka: `restore_mode` in documentation
  # Options: `RESTORE_DEFAULT_OFF`, `RESTORE_DEFAULT_ON`, `ALWAYS_ON` & `ALWAYS_OFF`
  default_state: "ALWAYS_ON"
  # Activity State Threshold
  # Threshold (number) that the device will change from `Idle` to `Active` if power is greater than or equal to
  activity_threshold: "10"

# Basic Config
esphome:
  name: "${device_name}"
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret esphome_wifi_ssid
  password: !secret esphome_wifi_password

logger:

api:
  reboot_timeout: 15min

ota:
  password: !secret esphome_ota_password

# Device Specific Config
time:
  - platform: homeassistant
    timezone: "Europe/London"
    # on_time:
    #   - seconds: 59
    #     minutes: 14
    #     hours: 00
    #     then:
    #       - lambda: |-
    #           id(energy_yesterday).publish_state(id(energy_today).state);

binary_sensor:
  # Push Button (Toggles Relay When Pressed)
  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: true
    name: "${friendly_name} Button"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "${friendly_name} Server Status"
    
switch:
  # Relay (As Switch)
  - platform: gpio
    name: "${friendly_name}"
    icon: "mdi:${main_icon}"
    pin: GPIO15
    id: relay
    restore_mode: "${default_state}"
    on_turn_on:
      - light.turn_on:
          id: led
          brightness: 100%
          transition_length: 0s
    on_turn_off:
      - light.turn_off:
          id: led
          transition_length: 0s
  
sensor:
  # Electricity Unit Rate from Home Assistant
  - platform: homeassistant
    id: electricity_unit_rate
    entity_id: input_number.electricity_unit_rate
    accuracy_decimals: 5
    unit_of_measurement: "£"
    filters:
      - lambda: |-
          return x / 100;
    
  # WiFi Signal Sensor
  - platform: wifi_signal
    name: "${friendly_name} WiFi Status"
    update_interval: 60s
  # Power Monitoring
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: true
    cf_pin: GPIO5
    cf1_pin: GPIO14
    change_mode_every: 3
    update_interval: 3s
    voltage:
      name: "${friendly_name} Voltage"
      icon: "mdi:alpha-v"
      id: voltage
      unit_of_measurement: V
      accuracy_decimals: 3
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.0
            - 602.87506 -> 229.9
            - 609.8 -> 232.8
    power:
      name: "${friendly_name} Power"
      icon: "mdi:alpha-w"
      id: power
      unit_of_measurement: W
      accuracy_decimals: 3
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 1.14
            - 62.06167 -> 10.93
            - 1503.27161 -> 247.6
            - 1599.81213 -> 263.7
            - 3923.67700 -> 631.4
            - 7109.50928 -> 1148.0
            - 7237.0857 -> 1193.0
            - 7426.71338 -> 1217.0
    current:
      name: "${friendly_name} Current"
      icon: "mdi:alpha-a"
      id: current
      unit_of_measurement: A
      accuracy_decimals: 3
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.013
            - 0.08208 -> 0.071
            - 1.34223 -> 1.066
            - 5.57170 -> 4.408
            - 6.69184 -> 5.259
            - 6.97187 -> 5.540
  # Energy Usage - Today
  - platform: total_daily_energy
    name: "${friendly_name} Energy Today"
    icon: "mdi:flash"
    id: energy_today
    power_id: power
    unit_of_measurement: kWh
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
  # Energy Cost - Today
  - platform: template
    name: "${friendly_name} Energy Cost Today"
    unit_of_measurement: "£"
    accuracy_decimals: 3
    icon: "mdi:currency-gbp"
    lambda: |-
      return id(energy_today).state * id(electricity_unit_rate).state;
  # # Energy Usage - Yesterday
  # - platform: template
  #   name: "${friendly_name} Energy Yesterday"
  #   icon: "mdi:flash"
  #   id: energy_yesterday
  #   unit_of_measurement: kWh
  #   accuracy_decimals: 3
      
      
text_sensor:
  # Activity Status
  - platform: template
    name: "${friendly_name} Activity Status"
    lambda: |-
      if (id(power).state >= 30) {
        return {"Pump Only"};
      } else if (id(power).state > 760) {
        return {"Heater Only"};
      } else if (id(power).state > 790) {
        return {"Pump & Bubbles"};
      } else if (id(power).state > 1500) {
        return {"Pump & Heater"};
      } else {
        return {"Idle"};
      }
    update_interval: 60s

# Relay State LED
output:
  - platform: esp8266_pwm
    id: state_led
    pin:
      number: GPIO0
      inverted: true

light:
  - platform: monochromatic
    output: state_led
    id: led